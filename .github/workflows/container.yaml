name: Container

on:
  workflow_dispatch:
  release:
    types: [created]


permissions:
  contents: read
  packages: write
  actions: write
  id-token: write
  security-events: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      commit-date: ${{ steps.ldflags.outputs.commit-date }}
      commit: ${{ steps.ldflags.outputs.commit }}
      version: ${{ steps.ldflags.outputs.version }}
      tree-state: ${{ steps.ldflags.outputs.tree-state }}
    steps:
      - run: git config --global core.autocrlf false
      - id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: ldflags
        run: |
          echo "commit-date=$(git log --date=iso8601-strict -1 --pretty=%ct)" >> "$GITHUB_OUTPUT"
          echo "commit=$GITHUB_SHA" >> "$GITHUB_OUTPUT"
          echo "version=$(git describe --tags --always --dirty | cut -c2-)" >> "$GITHUB_OUTPUT"
          echo "tree-state=$(if git diff --quiet; then echo "clean"; else echo "dirty"; fi)" >> "$GITHUB_OUTPUT"

  linuxbuild:
    name: build
    runs-on: ubuntu-latest
    needs: tag
    timeout-minutes: 15
    outputs:
      image: ${{ steps.build.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - uses: ko-build/setup-ko@v0.7
      - name: build and push containers
        run: |
          ko build \
            --platform=linux/amd64,linux/arm64,darwin/amd64,darwin/arm64 \
            --bare \
            --tags=latest,${{ needs.tag.outputs.version }} \
            --image-label="org.opencontainers.image.title=${{ github.event.repository.name }}" \
            --image-label="org.opencontainers.image.description=${{ github.event.repository.description }}" \
            --image-label="org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
            --image-label="org.opencontainers.image.version=${{ needs.tag.outputs.version }}" \
            --image-label="org.opencontainers.image.revision=${{ github.sha }}" \
            ./

  macosbuild:
    name: build
    runs-on: macos-latest
    needs: tag
    timeout-minutes: 15
    outputs:
      image: ${{ steps.build.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - uses: ko-build/setup-ko@v0.7
      - name: build and push containers
        run: |
          ko build \
            --platform=darwin/amd64,darwin/arm64 \
            --bare \
            --tags=latest,${{ needs.tag.outputs.version }} \
            --image-label="org.opencontainers.image.title=${{ github.event.repository.name }}" \
            --image-label="org.opencontainers.image.description=${{ github.event.repository.description }}" \
            --image-label="org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
            --image-label="org.opencontainers.image.version=${{ needs.tag.outputs.version }}" \
            --image-label="org.opencontainers.image.revision=${{ github.sha }}" \
            ./

  scan:
    name: scanning
    runs-on: ubuntu-latest
    needs: [linuxbuild, macosbuild]
    steps:
      - name: Scan container
        uses: aquasecurity/trivy-action@0.21.0
        with:
          image-ref: ghcr.io/${{ github.repository }}:latest
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif

